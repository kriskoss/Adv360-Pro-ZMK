/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        jumpWordLeft: jumpWordLeft {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDLEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp LC(LEFT_ARROW)>;

            tapping-term-ms = <270>;
        };

        jumpWordRight: jumpWordRight {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDRIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LC(RIGHT)>;

            tapping-term-ms = <270>;
        };

        capslock: capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TrackballScrollMB4 {
            bindings = <&mkp MB4>;
            key-positions = <71 72 73>;
        };

        LeftClick {
            bindings = <&mkp MB1>;
            key-positions = <71 72>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <72 73>;
        };

        fancyFM_01 {
            bindings = <&kp LS(LALT)>;
            key-positions = <0 1>;
        };

        FlowLauncher {
            bindings = <&kp LA(SPACE)>;
            key-positions = <63 64>;
        };

        FancyFMLeftThumb {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <67 65>;
        };

        FancyFMRightThumb {
            bindings = <&kp LS(LALT)>;
            key-positions = <68 70>;
        };

        FanyFM-0 {
            bindings = <&kp LS(LALT)>;
            key-positions = <12 13>;
        };

        FancyFMjm {
            bindings = <&kp LS(LALT)>;
            key-positions = <41 56>;
        };

        altGrR {
            bindings = <&kp RALT>;
            key-positions = <23 24>;
        };

        altGrL {
            bindings = <&kp RALT>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N1           &kp N2    &kp N3           &kp N4     &kp N5       &tog 1                                                                               &mo 3            &kp N6       &kp N7          &kp N8        &kp N9          &kp N0                  &kp MINUS
&kp TAB     &kp Q            &kp W     &hm RIGHT_ALT E  &lt 4 R    &kp T        &kp LS(TAB)                                                                          &kp LS(TAB)      &kp Y        &lt 4 U         &hm RALT I    &hm LS(LWIN) O  &kp P                   &kp BSLH
&kp ESCAPE  &hm LSHFT A      &kp S     &lt 2 D          &kp F      &hm LSHFT G  &kp TAB              &kp LCTRL   &kp LEFT_WIN       &kp LEFT_WIN        &kp RCTRL    &kp TAB          &hm LSHFT H  &kp J           &lt 2 K       &kp L           &kp SEMICOLON           &kp SQT
&kp LSHFT   &hm LSHFT SLASH  &kp Z     &hm LALT X       &lt 1 C    &kp V                                         &hm LSHFT END      &hm RSHFT PAGE_UP                                 &kp B        &hm LC(LWIN) N  &hm LALT M    &hm LWIN COMMA  &hm LCTRL LEFT_BRACKET  &kp RSHFT
&kp LCTRL   &mo 2            &kp CAPS  &kp LEFT         &kp RIGHT               &hm LSHFT BACKSPACE  &kp DELETE  &hm LALT HOME      &hm LALT PAGE_DOWN  &lt 2 ENTER  &hm RSHFT SPACE               &kp DOWN_ARROW  &kp UP_ARROW  &kp DOT         &kp RBKT                &lt 2 EQUAL
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &none   &kp LS(KP_NUM)  &kp MINUS     &kp ASTERISK  &kp PLUS      &none      &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none   &none           &kp N7        &kp N8        &kp N9        &kp PLUS   &none
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none   &none           &kp N4        &kp N5        &kp NUMBER_6  &kp COLON  &none
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                     &kp ENTER       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp N0                  &kp N0        &kp COMMA     &kp PERIOD    &kp SPACE  &kp EQUAL
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2     &kp F3  &kp F4       &kp F5   &kp F6  &tog 1                                                           &mo 3       &kp F7            &kp F8    &kp F9    &kp F10         &kp F11        &kp F12
&trans  &none      &mo 4   &none        &none    &none   &kp C_BRI_UP                                                     &kp ESCAPE  &none             &none     &none     &none           &none          &kp C_MUTE
&to 0   &none      &none   &none        &none    &none   &kp C_BRIGHTNESS_DEC  &trans  &trans      &none   &trans         &trans      &none             &kp LALT  &trans    &kp LCTRL       &kp SEMICOLON  &kp C_VOLUME_UP
&trans  &none      &none   &none        &none    &none                                 &trans      &trans                             &kp C_PLAY_PAUSE  &none     &kp LALT  &none           &kp PERIOD     &kp C_VOL_DN
&trans  &kp GRAVE  &none   &kp LS(TAB)  &kp TAB          &trans                &trans  &trans      &trans  &kp BACKSPACE  &kp DELETE                    &trans    &trans    &kp LEFT_ARROW  &kp RIGHT      &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        numbers_and_sym_4 {
            bindings = <
&trans  &none            &kp TILDE      &kp QUESTION       &kp PIPE          &none                 &trans                                      &trans  &kp GRAVE          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION    &none                 &trans
&trans  &kp CARET        &kp AMPERSAND  &kp ASTERISK       &kp SLASH         &kp NON_US_BACKSLASH  &trans                                      &trans  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL       &kp PLUS              &trans
&to 0   &kp EXCLAMATION  &kp AT         &kp HASH           &kp DOLLAR        &kp PERCENT           &trans  &trans  &trans      &trans  &trans  &trans  &kp CARET          &kp AMPS              &kp ASTERISK           &kp UNDERSCORE  &kp KP_MINUS          &trans
&trans  &none            &none          &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp GRAVE                             &trans      &trans                  &kp SQT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COMMA       &kp SLASH             &trans
&trans  &none            &none          &trans             &trans                                  &trans  &trans  &trans      &trans  &trans  &trans                     &kp LESS_THAN         &kp GREATER_THAN       &kp DOT         &kp NON_US_BACKSLASH  &kp PIPE
            >;
        };
    };
};
