/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        jumpWordLeft: jumpWordLeft {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDLEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp LC(LEFT_ARROW)>;

            tapping-term-ms = <270>;
        };

        jumpWordRight: jumpWordRight {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDRIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LC(RIGHT)>;

            tapping-term-ms = <270>;
        };

        capslock: capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TrackballScrollMB4 {
            bindings = <&mkp MB4>;
            key-positions = <71 72 73>;
        };

        fancyFromRightThumbC {
            bindings = <&kp LS(LALT)>;
            key-positions = <53 68>;
        };

        LeftClick {
            bindings = <&mkp MB1>;
            key-positions = <71 72>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <72 73>;
        };

        XF_fancyFM {
            bindings = <&kp LS(LALT)>;
            key-positions = <49 32>;
        };

        JM_fancyFM {
            bindings = <&kp LS(LALT)>;
            key-positions = <41 56>;
        };

        capslock_AD {
            bindings = <&kp CAPSLOCK>;
            key-positions = <31 65>;
        };

        FancyFM {
            bindings = <&kp LA(LSHFT)>;
            key-positions = <46 63>;
        };

        FlowLauncher {
            bindings = <&kp LA(SPACE)>;
            key-positions = <63 64>;
        };

        altTab {
            bindings = <&kp LA(TAB)>;
            key-positions = <14 63>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N1           &kp N2       &kp N3               &kp N4       &kp N5       &tog 1                                                                                 &mo 3            &kp N6       &kp N7          &kp N8        &kp N9            &kp N0         &kp MINUS
&kp TAB     &kp Q            &lt 4 W      &hm RIGHT_ALT E      &hm LWIN R   &kp T        &none                                                                                  &kp ESCAPE       &kp Y        &hm LEFT_WIN U  &hm RALT I    &lt 4 O           &kp P          &kp BSLH
&kp ESCAPE  &hm LSHFT A      &hm LCTRL S  &lt 2 D              &hm LSHFT F  &hm LSHFT G  &none                &kp LCTRL     &hm LWIN CAPS      &kp LEFT_WIN        &kp RCTRL    &kp TAB          &hm LSHFT H  &hm RSHFT J     &lt 2 K       &hm RCTRL L       &kp SEMICOLON  &kp SQT
&kp LSHFT   &hm LSHFT SLASH  &kp Z        &hm LALT X           &lt 1 C      &kp V                                           &hm LSHFT END      &hm RSHFT PAGE_UP                                 &kp B        &kp N           &hm LALT M    &kp COMMA         &hm LCTRL DOT  &kp RSHFT
&kp LCTRL   &mo 2            &kp LWIN     &hm LALT LEFT_ARROW  &kp RIGHT                 &hm LSHFT BACKSPACE  &hm CAPS DEL  &hm LALT HOME      &hm LALT PAGE_DOWN  &lt 2 ENTER  &hm RSHFT SPACE               &kp DOWN_ARROW  &kp UP_ARROW  &kp LEFT_BRACKET  &kp RBKT       &lt 2 EQUAL
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &none   &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none   &none  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none   &none  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp COLON        &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                     &none  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp DOT          &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp N0         &kp N0      &kp DOT       &kp SPACE      &none            &kp EQUAL
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3     &kp F4  &kp F5     &kp F6  &tog 1                                                                  &mo 3       &kp F7            &kp F8    &kp F9        &kp F10         &kp F11        &kp F12
&trans  &none   &mo 4      &none   &none      &none   &kp C_BRI_UP                                                            &trans      &none             &kp U     &kp I         &mo 4           &none          &kp C_MUTE
&to 0   &none   &kp LCTRL  &trans  &kp LSHFT  &none   &kp C_BRIGHTNESS_DEC  &trans  &trans      &kp BACKSPACE  &kp DELETE     &trans      &kp LEFT_ARROW    &kp DOWN  &kp UP_ARROW  &kp RIGHT       &kp SEMICOLON  &kp C_VOLUME_UP
&trans  &none   &none      &none   &mo 1      &none                                 &trans      &trans                                    &kp C_PLAY_PAUSE  &none     &kp M         &none           &kp PERIOD     &kp C_VOL_DN
&trans  &to 0   &trans     &trans  &none              &trans                &trans  &trans      &trans         &kp BACKSPACE  &kp DELETE                    &trans    &trans        &kp LEFT_ARROW  &kp RIGHT      &kp CAPSLOCK
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        numbers_and_sym_4 {
            bindings = <
&trans  &trans           &trans  &trans    &trans      &trans       &trans                                      &trans  &trans     &trans                &trans                 &trans                &trans                 &trans
&trans  &none            &none   &none     &none       &none        &trans                                      &trans  &none      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&to 0   &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans  &trans  &trans      &trans  &trans  &trans  &kp CARET  &kp AMPS              &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans  &trans    &trans      &trans                       &trans      &trans                  &none      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COMMA             &kp PERIOD             &trans
&trans  &trans           &trans  &trans    &trans                   &trans  &trans  &trans      &trans  &trans  &trans             &kp LESS_THAN         &kp GREATER_THAN       &kp SLASH             &kp QUESTION           &trans
            >;
        };
    };
};
