/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        jumpWordLeft: jumpWordLeft {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDLEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp LC(LEFT_ARROW)>;

            tapping-term-ms = <270>;
        };

        jumpWordRight: jumpWordRight {
            compatible = "zmk,behavior-tap-dance";
            label = "JUMPWORDRIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LC(RIGHT)>;

            tapping-term-ms = <270>;
        };

        capslock: capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TrackballScrollMB4 {
            bindings = <&mkp MB4>;
            key-positions = <71 72 73>;
        };

        LeftClick {
            bindings = <&mkp MB1>;
            key-positions = <71 72>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <72 73>;
        };

        fancyFM_01 {
            bindings = <&kp LS(LALT)>;
            key-positions = <0 1>;
        };

        FlowLauncher {
            bindings = <&kp LA(SPACE)>;
            key-positions = <63 64>;
        };

        FancyFMLeftThumb {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <67 65>;
        };

        FancyFMRightThumb {
            bindings = <&kp LS(LALT)>;
            key-positions = <68 70>;
        };

        FanyFM-0 {
            bindings = <&kp LS(LALT)>;
            key-positions = <12 13>;
        };

        FancyFMjm {
            bindings = <&kp LS(LALT)>;
            key-positions = <41 56>;
        };

        altGrR {
            bindings = <&kp RALT>;
            key-positions = <23 24>;
        };

        altGrL {
            bindings = <&kp RALT>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE      &kp N1     &kp N2    &kp N3      &kp N4     &kp N5  &mo 1                                                                                  &mo 3            &kp N6  &kp N7          &kp N8        &kp N9     &kp N0            &kp MINUS
&kp TAB        &kp Q      &kp W     &kp E       &kp R      &kp T   &none                                                                                  &kp LS(TAB)      &kp Y   &kp U           &kp I         &kp O      &kp P             &kp BSLH
&kp ESCAPE     &kp A      &kp S     &lt 4 D     &kp F      &kp G   &none                &kp LCTRL     &kp LWIN           &kp LEFT_WIN        &kp RCTRL    &kp TAB          &kp H   &kp J           &lt 4 K       &kp L      &kp SEMICOLON     &kp SQT
&kp RIGHT_ALT  &kp SLASH  &kp Z     &hm LALT X  &lt 1 C    &kp V                                      &lt 4 END          &lt 4 PAGE_UP                                     &kp B   &kp N           &hm LALT M    &kp COMMA  &kp LEFT_BRACKET  &kp RIGHT_ALT
&kp LS(TAB)    &kp TAB    &kp CAPS  &kp LEFT    &kp RIGHT          &hm LSHFT BACKSPACE  &lt 2 DELETE  &hm LALT HOME      &hm LALT PAGE_DOWN  &lt 2 ENTER  &hm RSHFT SPACE          &kp DOWN_ARROW  &kp UP_ARROW  &kp DOT    &kp RBKT          &lt 2 EQUAL
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                        &none   &kp LS(KP_NUM)  &kp MINUS     &kp ASTERISK  &kp PLUS      &none      &kp UNDER
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                         &none   &none           &kp N7        &kp N8        &kp N9        &kp PLUS   &kp PIPE
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp BACKSPACE  &kp DELETE  &none   &none           &kp N4        &kp N5        &kp NUMBER_6  &kp COLON  &kp DOUBLE_QUOTES
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                          &kp ENTER       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN      &kp ENTER   &kp N0                  &kp N0        &kp COMMA     &kp PERIOD    &kp SPACE  &kp PLUS
            >;
        };

        layer_fn {
            bindings = <
&none   &kp F1  &kp F2           &kp F3      &kp F4  &kp F5           &none                                                                &kp K_MUTE       &kp F6            &kp F7        &kp F8        &kp F9        &kp F10          &kp F11
&trans  &kp N0  &kp UNDERSCORE   &kp DOLLAR  &none   &none            &kp C_BRI_UP                                                         &kp C_VOLUME_UP  &kp PLUS          &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &kp F12
&to 0   &none   &kp PRINTSCREEN  &none       &none   &none            &kp C_BRIGHTNESS_DEC  &trans  &trans      &kp BACKSPACE  &kp DELETE  &kp C_VOL_DN     &kp MINUS         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COLON        &kp DOUBLE_QUOTES
&trans  &none   &none            &none       &none   &kp PRINTSCREEN                                &trans      &trans                                      &kp C_PLAY_PAUSE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE    &none
&trans  &none   &none            &none       &none                    &trans                &trans  &trans      &trans         &kp ENTER   &kp N0                             &trans        &trans        &kp PERIOD    &none            &kp EQUAL
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        numbers_and_sym_4 {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp PIPE    &kp PERCENT  &trans                                              &trans  &kp CARET  &kp AMPERSAND         &kp ASTERISK           &none           &none                 &kp UNDERSCORE
&trans     &kp CARET        &kp AMPERSAND  &kp ASTERISK  &none       &none        &trans                                              &trans  &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL       &kp SLASH             &kp PIPE
&to 0      &kp EXCLAMATION  &kp AT         &kp HASH      &kp DOLLAR  &kp PERCENT  &trans  &trans  &trans      &kp BACKSPACE  &kp DEL  &trans  &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp COLON             &kp DOUBLE_QUOTES
&trans     &none            &kp TILDE      &kp QUESTION  &kp PIPE    &none                        &trans      &trans                          &kp SQT    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COMMA       &kp NON_US_BACKSLASH  &trans
&trans     &none            &none          &trans        &trans                   &trans  &trans  &trans      &trans         &trans   &trans             &kp LESS_THAN         &kp GREATER_THAN       &kp DOT         &none                 &kp PLUS
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
